Q1: When would you want to use a remote repository rather than keeping all your work local?
A1: Because we may share the repository with others and we may also want to contribute to others commits.
Q2: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
A2: Because I may be not the only one who is working on the repository. If someone else has committed something that conflicts with my own local version, then I don't want it to be done automatically.
Q3: Describe the differences between forks, clones, and branches. When would you use one instead of another?
A3: Fork is cloning one else's repository on GitHub to my repository on GitHub.
Clone is copying one's repository from GitHub or on a computer to my local drive.
Branches is to create a new commit for experimental use and not affecting the master branch.
Fork is used in GitHub.
Clone is used in my local computer.
Branch is used when I want to create a non-master commit.
Q4: What is the benefit of having a copy of the last known state of the remote stored locally?
A4: That keeps the latest update of the remote and we can then compare the differences betweent the local repositories and the remote.
Q5: How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
A5: I have to send emails to other collaborators and ask them to update and merge. GitHub provides a platform so that the same process becomes easier.
Q6: When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
A6: When I want to do something experimental and not publishing them in a short time, I would create a new branch because in this way the master branch is not affected unless I merge the two branched.